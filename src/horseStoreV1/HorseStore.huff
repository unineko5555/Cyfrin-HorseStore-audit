// send calldata => function dispatch -> function

// 60008060093d393df3 -> contact creation bytecode
// 60018060093d393df3 5f -> 5F PUSH0

// 0xcdfead2e0000000000000000000000000000000000000000000000000000000000000001
// Let's find the function selector -> route it to hte code that updates horses

/* Interface */
#define function updateHorseNumber(uint256) nonpayable returns()
#define function readNumberOfHorses() view returns(uint256)

#define constant NUMBER_OF_HORSES_STORAGE_SLOT = FREE_STORAGE_POINTER() // ->0x00とも書けるがhuffの構文を使う 32byets


#define macro MAIN() = takes(0) returns(0) {
    // 0x00 // [0]
    // 0x02 // TOP [2,0] BOTTOM
    // calldataload // [calldata(32)]
    // How do we cut dwn the calldata -> func selector?
    // 64 / 2 = 32 bytes -> right
    // We need to right shift 28 bytes, 224bits
    // 0xe0 //[0xe0, calldata(32)]
    // shr //[function_selector]
    // 0x00 calldataload 0xE0 shr //[function_selector]

    // Jump -> function data associated with the selector 
    // If f_select == updateHorseNumber -> Jump to that code
    // If f_select == readHorseNumber -> Jump to that code
    // 0xcdfead2e== update
    // 0xe026c017 == read

    // updateHorseNumber selector
    // dup1 // [function_selector, function_selector]
    // 0xcdfead2e // [0xcdfead2e, function_selector, function_selector]
    // eq // [true_if_func_selector_matches, function_selector]
    // jump to updateHorseNumber code if true
    // updateJump // [updateHorseNumberProgramCounter, true/false, function_selector]
    // jumpi //[function_selector]

    // readNumberOfHorses, 0xe026c017
    //@audit-info solidityでは0xe026c017の前にdup1が入りガス代が高くなる、これがhuffでの最適化
    // 0xe026c017 // [0xe026c017, function_selector] 
    // eq //[true_if_func_selector_matches]
    // readJump //[readJump, true_if_func_selector_matches]
    // jumpi //[]


    0x00 calldataload 0xE0 shr // [function_selector]
    // updateNumberOfHorses __FUNC_SIG
    dup1 __FUNC_SIG(updateHorseNumber) eq updateJump jumpi // [function_selector]
    // reeadNumberOfHorese, 0xe026c017
    __FUNC_SIG(readNumberOfHorses) eq readJump jumpi

    0x00 0x00 revert

    updateJump:
        SET_NUMBER_OF_HORSES()
    readJump:
        GET_NUMBER_OF_HORSES()

}

// 0xcdfead2e 0000000000000000000000000000000000000000000000000000000000000007
#define macro SET_NUMBER_OF_HORSES() = takes(0) returns(0){
    // 2. Get the value to store from calldata
    0x04 // [4]
    calldataload // [value]
    // 1. Give it a storage slot
    [NUMBER_OF_HORSES_STORAGE_SLOT] // [storage_slot, value], [0] -> stackに0を置くということ,つまりpointer
    // 3. sstore opcode
    sstore
    stop
}
// 0xe026c017 0000000000000000000000000000000000000000000000000000000000000007
#define macro GET_NUMBER_OF_HORSES() = takes(0) returns(0){
    // 1. Get the storage slot
    // 2. Load the value of that slot into memory
    // 3. Return
    [NUMBER_OF_HORSES_STORAGE_SLOT] //  [key]
    sload // [value]
    0x00 // [0, value]
    mstore // [] // Memory: [value]
    // 0x20 == 32 bytes
    0x20 0x00 return //[]
}